
@{
    ViewBag.Title = "Index";
}

<h2>Operation</h2>

<div class="row">
    <div class="form-horizontal form-widgets col-md-12">

        <div class="form-group">
            Выберите банк
            <select class="combobox" id="sender-bank"></select>
        </div>

        <div class="form-group">
            <table class="table table-striped table-hover table-bordered" id="sender-invoices-table">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Номер счета</th>
                        <th scope="col">Сумма</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody id="sender-invoices-tbody"></tbody>
            </table>
        </div>

    </div>

</div>

<div class="modal fade" id="transferModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transferModalLabel">Перевод</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Закрыть">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Transfer", "Operations", FormMethod.Post, htmlAttributes: new { id = "transfer_form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <input type="hidden" class="form-control" id="sender-invoice-id" name="senderInvoiceId">
                    </div>
                    <div class="form-group">
                        <label for="sender-invoice-number" class="col-form-label">Отправитель:</label>
                        <input type="text" class="form-control" id="sender-invoice-number" readonly>
                    </div>
                    <hr />
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Выберите банк получателя:</label>
                        <select class="combobox" id="recipient-bank"></select>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Выберите счет получателя:</label>
                        <table class="table table-striped table-hover table-bordered" id="recipient-invoices-table">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">Номер счета</th>
                                    <th scope="col">Сумма</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody id="recipient-invoices-tbody" data-toggle="buttons"></tbody>
                        </table>
                    </div>
                    <div class="form-group">
                        <label for="ammount" class="col-form-label">Сумма перевода:</label>
                        <input type="number" class="form-control" name="ammount" required>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btn-transfer">Перевести</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            jQuery(function ($) {

                $("#transfer_form").on("submit", function (e) {
                    var postData = $(this).serializeArray();
                    var formURL = $(this).attr("action");
                    $.ajax({
                        url: formURL,
                        type: "POST",
                        data: postData,
                        success: function (data, textStatus, jqXHR) {
                            if (data.success)
                                $('#transferModal').modal('toggle');
                            else
                                alert(data.m);
                        },
                        error: function (jqXHR, status, error) {
                            alert(status + ": " + error);
                        }
                    });
                    e.preventDefault();
                });

                $("#btn-transfer").on('click', function () {
                    $("#transfer_form").submit();
                });

                $('#transferModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var modal = $(this);

                    var sender_invoice_id = button.data('sender-invoice-id');

                    modal.find('#sender-invoice-id').val(sender_invoice_id);
                    modal.find('#sender-invoice-number').val(button.data('sender-invoice-number'));

                    $("#recipient-bank").on('change', function () {
                        var id = $("#recipient-bank option:selected").attr('id');

                        if (id != null) {
                            $('#recipient-invoices-table').DataTable().destroy();

                            $("#recipient-invoices-tbody").load(`@Url.Action("RecipientInvoices", "Operations")/${id}?senderInvoiceId=${sender_invoice_id}`, function () {
                                $('#recipient-invoices-table').DataTable({
                                    aLengthMenu: [
                                        [5, 50, 100, 200, -1],
                                        [5, 50, 100, 200, "All"]
                                    ],
                                    iDisplayLength: 5,
                                    retrieve: true
                                });
                            });
                        }

                    }).load('@Url.Action("banks", "Operations")/', function () {
                        $("#recipient-bank").change();
                    });

                });

                $("#sender-bank").on('change', function () {
                    var id = $("#sender-bank option:selected").attr('id');

                    if (id != null) {
                        $('#sender-invoices-table').DataTable().destroy();
                        $("#sender-invoices-tbody").load(`@Url.Action("SenderInvoices", "Operations")/${id}`, function () {
                            $('#sender-invoices-table').DataTable();
                        });
                    }

                }).load('@Url.Action("banks", "Operations")/', function () {
                    $("#sender-bank").change()
                });

            });
        });
    </script>

}